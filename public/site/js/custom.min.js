function cwButtons(){document.querySelectorAll(".cw-btn").forEach((button=>{const iconClass=button.getAttribute("data-icon");iconClass&&(button.innerHTML=`<i class="${iconClass}"></i>${button.textContent.trim()}`)}))}function loadZuckLibraries(callback){if(!document.getElementById("zuck-css")){let cssLink=document.createElement("link");cssLink.id="zuck-css",cssLink.rel="stylesheet",cssLink.href="/site/lib/zuck/css/zuck.min.css",document.head.appendChild(cssLink)}if(document.getElementById("zuck-js"))callback();else{let scriptTag=document.createElement("script");scriptTag.id="zuck-js",scriptTag.src="/site/lib/zuck/js/zuck.min.js",scriptTag.onload=callback,document.body.appendChild(scriptTag)}}function formValidation(){document.querySelectorAll(".needs-validation").forEach((form=>{form.addEventListener("submit",(function(event){form.checkValidity()?setButtonLoading(form.querySelector('button[type="submit"], input[type="submit"]')):(event.preventDefault(),event.stopPropagation()),form.classList.add("was-validated")}),!1),form.querySelectorAll(".cw-btn").forEach((button=>{button.addEventListener("click",(function(e){form.checkValidity()||(e.preventDefault(),e.stopPropagation(),form.classList.add("was-validated"))}))}))}))}function loadStories(){let btn=document.querySelector("#view-stories"),contentSeenItems=JSON.parse(localStorage.getItem("zuck-stories-content-seenItems")||"{}"),seenUserIds=Object.keys(contentSeenItems);fetch("/stories",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({seenUserIds:seenUserIds})}).then((response=>response.ok?response.json():null)).then((data=>{if(data)if(data.success&&Array.isArray(data.data?.result)){let storiesData=data.data.result;Array.isArray(data.expiredUsers)&&data.expiredUsers.length>0&&(data.expiredUsers.forEach((userId=>{delete contentSeenItems[userId]})),localStorage.setItem("zuck-stories-content-seenItems",JSON.stringify(contentSeenItems)));let unviewedSeenItems=JSON.parse(localStorage.getItem("zuck-unviewed-stories-seenItems")||"{}");storiesData.sort(((a,b)=>{let aViewed=unviewedSeenItems[a.id]||contentSeenItems[a.id]||!1;return aViewed===(unviewedSeenItems[b.id]||contentSeenItems[b.id]||!1)?0:aViewed?1:-1})),storiesData.some((story=>!contentSeenItems[story.id]))?btn.classList.add("stories-indicator"):btn.classList.remove("stories-indicator")}else btn.classList.remove("stories-indicator");else btn.classList.remove("stories-indicator")})).catch((error=>{console.warn("No stories or server error occurred:",error),btn.classList.remove("stories-indicator")})),document.querySelector("#view-stories").addEventListener("click",(function(e){let btn=document.querySelector("#view-stories");btn.classList.contains("stories-indicator")&&btn.classList.remove("stories-indicator");let storiesContent=document.querySelector("#stories-content"),spinner=document.querySelector("#stories-spinner"),errorMessage="<div class='alert alert-warning' role='alert' style='margin-bottom:0px'>There are currently no stories</div>";loadZuckLibraries((function(){storiesContent.classList.remove("d-none"),spinner.classList.add("show");let contentSeenItems=localStorage.getItem("zuck-stories-content-seenItems");contentSeenItems=contentSeenItems?JSON.parse(contentSeenItems):{};let seenUserIds=Object.keys(contentSeenItems);fetch("/stories",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({seenUserIds:seenUserIds})}).then((response=>response.json())).then((data=>{if(spinner.classList.remove("show"),data.success){let storiesData=data.data.result;data.expiredUsers&&data.expiredUsers.length>0&&(data.expiredUsers.forEach((userId=>{delete contentSeenItems[userId]})),localStorage.setItem("zuck-stories-content-seenItems",JSON.stringify(contentSeenItems))),storiesContent.innerHTML="";let unviewedSeenItems=localStorage.getItem("zuck-unviewed-stories-seenItems");contentSeenItems=localStorage.getItem("zuck-stories-content-seenItems"),unviewedSeenItems=unviewedSeenItems?JSON.parse(unviewedSeenItems):{},contentSeenItems=contentSeenItems?JSON.parse(contentSeenItems):{},storiesData.sort(((a,b)=>{let aViewed=unviewedSeenItems[a.id]||contentSeenItems[a.id]||!1,bViewed=unviewedSeenItems[b.id]||contentSeenItems[b.id]||!1;return aViewed&&!bViewed?1:!aViewed&&bViewed?-1:0}));const zuckInstance=new Zuck(storiesContent,{backNative:!0,autoFullScreen:!1,skin:"snapgram",avatars:!0,list:!1,cubeEffect:!0,localStorage:!0,reactive:!1,stories:storiesData,callbacks:{onView:function(storyId,callback){!function(storyId){fetch(`/stories/viewed/${storyId}`,{method:"PATCH",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")}}).then((response=>response.json()))}(storyId),"function"==typeof callback&&callback()},onClose:function(storyId,callback){callback()},onOpen:function(storyId,callback){callback()},onNextItem:function(storyId,currentItem,callback){callback()},onEnd:function(storyId,callback){callback()},onNavigateItem:function(storyId,direction,callback){callback()},onDataUpdate:function(storyId,callback){callback()}}});storiesContent.zuckInstance=zuckInstance}else storiesContent.innerHTML=errorMessage})).catch((error=>{spinner.classList.remove("show"),storiesContent.innerHTML=errorMessage}))}))})),document.querySelector("#storiesCanvas").addEventListener("hidden.bs.offcanvas",(function(){let storiesContent=document.querySelector("#stories-content");storiesContent.innerHTML='\n        <div id="stories-spinner" class="show bg-white d-flex align-items-center justify-content-center">\n            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">\n                <span class="visually-hidden">Loading...</span>\n            </div>\n        </div>\n    ',storiesContent.classList.add("d-none")}))}function loadNotification(){const notificationContainer=document.getElementById("notification-container");let currentPage=1,isLoading=!1,hasMorePages=!0;const notificationsSeen=sessionStorage.getItem("notifications_seen");notificationContainer.innerHTML='\n        <div id="news-modal" class="modal fade" tabindex="-1" role="dialog">\n            <div class="modal-dialog modal-dialog-centered" role="document">\n                <div class="modal-content" style="background: #ffffffdd">\n                    <div class="modal-header" style="background-color: #ff660010 !important">\n                        <h5 class="modal-title"><i class="bi-megaphone"></i> &nbsp; Notifications</h5>\n                        <button type="button" class="btn-close border border-2 border-secondary" data-bs-dismiss="modal" aria-label="Close"></button>\n                    </div>\n                    <div class="modal-body">\n                        <div class="d-flex justify-content-between align-items-center mb-1" style="margin-top:-4px">\n                            <div class="flex-grow-1 me-3">\n                                <div class="input-group">\n                                    <span class="input-group-text">\n                                        <i class="bi bi-search"></i>\n                                    </span>\n                                    <input type="text" id="search-notifications" class="form-control" style="border-radius: 3px; padding: .4rem .8rem" placeholder="Search..." />\n                                </div>\n                            </div>\n                            <div>\n                                <select id="filter-notifications" class="form-select" style="border-radius: 3px; padding: .4rem .8rem; min-width: 150px;">\n                                    <option value="">All</option>\n                                    <option value="Tender">Tenders</option>\n                                    <option value="Gallery">Galleries</option>\n                                    <option value="Event">Events</option>\n                                    <option value="News">News</option>\n                                    <option value="Seniority">Seniorities</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div id="modal-body-content" class="custom-scrollbar" style="height: 400px; overflow-y: auto;">\n                            <div id="notification-list"></div>\n                            <div id="loading-indicator" class="d-flex justify-content-center my-3">\n                                <div class="spinner-border text-primary" role="status">\n                                    <span class="visually-hidden">Loading...</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="modal-footer d-flex justify-content-center w-100" style="padding: 2px !important; background-color: #ff660010 !important">\n                        <div><a href="/notifications/all">All Notifications</a></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ',document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll(".custom-scrollbar").forEach((element=>{let timeout;element.addEventListener("mouseenter",(()=>{clearTimeout(timeout),element.style.scrollbarWidth="thin",element.style.scrollbarColor="rgba(0, 0, 0, 0.2) transparent"})),element.addEventListener("mouseleave",(()=>{timeout=setTimeout((()=>{element.style.scrollbarWidth="none",element.style.scrollbarColor="transparent transparent"}),1e3)}));const contentWidth=element.offsetWidth;element.style.width=`${contentWidth}px`}))}));const newsModal=new bootstrap.Modal(document.getElementById("news-modal")),notificationList=document.getElementById("notification-list"),loadingIndicator=document.getElementById("loading-indicator"),modalBodyContent=document.getElementById("modal-body-content"),searchInput=document.getElementById("search-notifications"),filterDropdown=document.getElementById("filter-notifications");function handleSearchOrFilter(){currentPage=1,notificationList.innerHTML="",loadingIndicator.innerHTML='<div class="spinner-border text-primary" role="status">\n                                        <span class="visually-hidden">Loading...</span>\n                                    </div>',hasMorePages=!0,fetchNotifications(currentPage)}function fetchNotifications(page){if(isLoading||!hasMorePages)return;isLoading=!0;const searchQuery=searchInput.value.trim(),selectedType=filterDropdown.value;showLoadingIndicator(!0),fetch(`/notifications?page=${page}&search=${encodeURIComponent(searchQuery)}&type=${selectedType}`).then((response=>response.json())).then((data=>{const{notifications:notifications,nextPage:nextPage,hasMore:hasMore}=data;notifications.length&&function(notifications){const notificationItems=notifications.map((item=>`\n            <div class="d-flex align-items-center p-2 notification-item ${item.recentNotification&&"recent-notification-indicator"}">\n                <div class="me-3 notification-img">\n                    <img src="${item.imageUrl}" class="img-fluid rounded}" alt="${item.type}">\n                </div>\n                <div class="flex-grow-1">\n                    <a href="${item.url}">${item.title}</a>\n                </div>\n                <small class="news-date text-muted d-flex flex-column align-items-end ms-2" style="flex-shrink: 0;">\n                    <div class="mb-1">\n                        <a href="${item.info[2]}" class="badge text-bg-primary" style="font-size: 10px; display: inline-block">${item.info[0]}</a>\n                    </div>\n                    <span class="fw-bold" style="font-size:.7rem">${item.created_at}</span>\n                </small>\n            </div>\n        `)).join("");notificationList.innerHTML+=notificationItems}(notifications),currentPage=nextPage||currentPage,hasMorePages=hasMore,isLoading=!1,sessionStorage.setItem("notifications_seen",!0),hasMore||(showLoadingIndicator(!1),loadingIndicator.innerHTML='\n            <span class="text-muted">No more notifications</span>\n        ')})).catch((error=>{console.error("Error fetching notifications:",error),isLoading=!1,showLoadingIndicator(!1)}))}function showLoadingIndicator(show){loadingIndicator.style.display=show?"flex":"none"}searchInput.addEventListener("input",handleSearchOrFilter),filterDropdown.addEventListener("change",handleSearchOrFilter),notificationsSeen||(fetchNotifications(currentPage),newsModal.show()),modalBodyContent.addEventListener("scroll",(()=>{modalBodyContent.scrollTop+modalBodyContent.clientHeight>=modalBodyContent.scrollHeight-50&&fetchNotifications(currentPage)}))}function loadAnnouncement(){const announcementContainer=document.getElementById("announcement-container");let isLoading=!0;const announcementSeen=sessionStorage.getItem("announcement_seen");let loadingIndicator=document.getElementById("loading-indicator");function showLoadingIndicator(show){loadingIndicator&&(loadingIndicator.style.display=show?"flex":"none")}loadingIndicator||(loadingIndicator=document.createElement("div"),loadingIndicator.id="loading-indicator",loadingIndicator.className="d-flex justify-content-center my-3",loadingIndicator.innerHTML='\n            <div class="spinner-border text-primary" role="status">\n                <span class="visually-hidden">Loading...</span>\n            </div>\n        ',announcementContainer.appendChild(loadingIndicator)),announcementSeen||(showLoadingIndicator(!0),fetch("/announcement").then((response=>{if(!response.ok)throw new Error(`HTTP error! Status: ${response.status}`);return response.json()})).then((announcement=>{if(showLoadingIndicator(!1),announcement&&announcement.title&&announcement.slug){announcementContainer.innerHTML=`\n                    <div id="announcement-modal" class="modal zoomin" tabindex="-1" role="dialog">\n                        <div class="modal-dialog modal-dialog-centered" role="document"  style="width: 80vw">\n                            <div class="modal-content p-0 m-0 border border-2 border-warning shadow-lg">\n                                <div class="modal-header bg-warning">\n                                    <h5 class="modal-title"><i class="bi-megaphone"></i> &nbsp; ${announcement.title}</h5>\n                                    <button type="button" class="btn-close border border-2 border-secondary" data-bs-dismiss="modal" aria-label="Close"></button>\n                                </div>\n                                <div class="modal-body p-0 m-0">\n                                    <a href="/news/${announcement.slug}" class="d-block">\n                                        <img src="${announcement.image||""}" class="img-fluid rounded" alt="${announcement.title}" />\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                `;try{new bootstrap.Modal(document.getElementById("announcement-modal")).show(),isLoading=!1,sessionStorage.setItem("announcement_seen",!0)}catch(error){console.error("Error showing announcement modal:",error)}}else console.log("No valid announcement data available")})).catch((error=>{console.error("Error fetching announcement:",error),isLoading=!1,showLoadingIndicator(!1)})))}function customTheme(){const offcanvas=document.createElement("div");offcanvas.className="offcanvas offcanvas-end",offcanvas.id="themeCanvas",offcanvas.setAttribute("tabindex","-1"),offcanvas.setAttribute("aria-labelledby","themeCanvasLabel");offcanvas.innerHTML=`\n        <div class="offcanvas-header">\n            <h5 class="offcanvas-title" id="themeCanvasLabel">Choose Theme</h5>\n            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>\n        </div>\n        <div class="offcanvas-body">\n            <div class="d-flex flex-column gap-3">\n                ${[{name:"default",color:"#0b7240",title:"Default Theme"},{name:"brown",color:"#855723",title:"Brown Theme"},{name:"blue",color:"#3b5998",title:"Blue Theme"},{name:"violet",color:"#612bac",title:"Violet Theme"},{name:"darkred",color:"#830051",title:"Dark Red Theme"}].map((theme=>`\n                    <div class="theme-option p-3 rounded" onclick="applyTheme('${theme.name}')" \n                        style="cursor: pointer; border: 1px solid #ddd; box-shadow: 0 0 15px #00000045" onmouseover="this.style.backgroundColor='${theme.color}'; this.style.color = 'white'" onmouseout="this.style.backgroundColor='transparent'; this.style.color = 'black'">\n                        <div class="d-flex align-items-center gap-2">\n                            <div style="width: 25px; height: 25px; background-color: ${theme.color}; border-radius: 50%;border:2px solid #fff;"></div>\n                            <h6 class="mb-0">${theme.title}</h6>\n                        </div>\n                    </div>\n                `)).join("")}\n            </div>\n        </div>\n    `,document.body.appendChild(offcanvas),window.applyTheme=function(themeName){let themeLink=document.getElementById("theme-stylesheet");if("default"===themeName)themeLink&&themeLink.remove();else{if(!themeLink){themeLink=document.createElement("link"),themeLink.id="theme-stylesheet",themeLink.rel="stylesheet";const styleSheet=document.querySelector('link[href*="style.min.css"]');styleSheet?styleSheet.parentNode.insertBefore(themeLink,styleSheet.nextSibling):document.head.appendChild(themeLink)}themeLink.href=`/site/css/themes/${themeName}.css`}localStorage.setItem("selectedTheme",themeName),window.themeCanvas.hide()},window.themeCanvas=new bootstrap.Offcanvas(document.getElementById("themeCanvas"))}document.addEventListener("DOMContentLoaded",(e=>{formValidation(),loadStories(),loadNotification(),loadAnnouncement(),customTheme(),cwButtons()}));