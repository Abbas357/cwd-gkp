async function fetchRequest(url,method="GET",data={},successMessage="Operation successful",errorMessage="There was an error processing your request"){try{let headers={"X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content"),Accept:"application/json"};data instanceof FormData||(headers["Content-Type"]="application/json");const options={method:method,headers:headers,body:null};"GET"!==method&&(options.body=data instanceof FormData?data:JSON.stringify(data));const response=await fetch(url,options);if(!response.ok){if(422===response.status){return handleValidationErrors((await response.json()).errors),!1}throw new Error(`HTTP error! Status: ${response.status}`)}const result=await response.json();return result.success?"GET"===method?result.data:(alert(result.success||successMessage),!0):(alert(result.error||errorMessage||"An unexpected error occurred","error"),!1)}catch(error){return alert(errorMessage||"There was an error processing your request","error"),!1}}function handleValidationErrors(errors){$(".form-error").remove(),setButtonLoading($('button[type="submit"]'),!1);for(const field in errors){const errorMessages=errors[field],input=$(`[name="${field}"]`);errorMessages.forEach((message=>{const errorElement=`<span class="form-error text-danger">${message}</span>`;input.after(errorElement)}))}}function setButtonLoading(buttonSelector,isLoading=!0,loadingText="Please wait..."){if(!buttonSelector)return;const button=$(buttonSelector);if(!button.length)return;const formElement=button.closest("form"),originalText=button.val()||button.html();isLoading?(formElement.length&&formElement.addClass("disabled-form"),button.data("original-text",originalText),document.documentElement.classList.add("card-loading"),button.is("button")?button.html(`\n                <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>\n                <span role="status">${loadingText}</span>\n            `):button.is("input")&&button.val(loadingText),button.prop("disabled",!0)):(formElement.length&&formElement.removeClass("disabled-form"),document.documentElement.classList.remove("card-loading"),button.is("button")?button.html(button.data("original-text")):button.is("input")&&button.val(button.data("original-text")),button.prop("disabled",!1))}function uniqId(amount){const chars="abcdefghijklmnopqrstuvwxyz0123456789";let uniqueID="";for(let i=0;i<amount;i++){uniqueID+=chars[Math.floor(36*Math.random())]}return uniqueID}function imageCropper(options){var defaults={fileInput:"#image",inputLabelPreview:"#image-label-preview",aspectRatio:1,viewMode:2,imageType:"image/jpeg",quality:.7,onComplete:null};options=$.extend({},defaults,options);var uniqueId=uniqId(6),modalId=`#crop-modal-${uniqueId}`,cropBoxImageId=`#cropbox-image-${uniqueId}`,cropButtonId=`#apply-crop-${uniqueId}`,aspectRatioSelectId="#aspect-ratio-select",actionsContainerId=`#action-buttons-${uniqueId}`;$("body").append(generateModalHtml(uniqueId));var $fileInput=$(options.fileInput),$inputLabelPreview=$(options.inputLabelPreview),$cropBoxImage=$(cropBoxImageId),$cropModal=$(modalId),$aspectRatioSelect=$(aspectRatioSelectId),$cropButton=$(cropButtonId),$actionsContainer=$(actionsContainerId),cropper;function loadActionButtons($container){var buttonsHTML='\n        <select id="aspect-ratio-select" class="select-aspect-ratio form-control">\n            <option value="">Choose Size</option>\n            <option value="1 / 1">1:1 (Square)</option>\n            <option value="16 / 9">16:9 (Widescreen)</option>\n            <option value="9 / 16">9:16 (Vertical)</option>\n            <option value="21 / 9">21:9 (Ultra-wide)</option>\n            <option value="4 / 3">4:3 (Old TV)</option>\n            <option value="3 / 2">3:2 (DSLR)</option>\n            <option value="1 / 1.294">1:1.294 (Letter)</option>\n            <option value="1 / 1.6471">1:1.6471 (Legal)</option>\n            <option value="NaN">Free (Whatever you want)</option>\n        </select>\n        <button type="button" class="btn-mode-move btn btn-light btn-sm" data-method="setDragMode" data-option="move" title="Move">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.setDragMode(&quot;move&quot;)">\n                <span class="text-xs bi-arrows-move"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-mode-crop btn btn-light btn-sm" data-method="setDragMode" data-option="crop" title="Crop">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.setDragMode(&quot;crop&quot;)">\n                <span class="text-xs bi-crop"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-zoom-in btn btn-light btn-sm" data-method="zoom" data-option="0.1" title="Zoom In">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.zoom(0.1)">\n                <i class="bi bi-zoom-in"></i>\n            </span>\n        </button>\n        <button type="button" class="btn-zoom-out btn btn-light btn-sm" data-method="zoom" data-option="-0.1" title="Zoom Out">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.zoom(-0.1)">\n                <i class="bi bi-zoom-out"></i>\n            </span>\n        </button>\n        <button type="button" class="btn-arrow-left btn btn-light btn-sm" data-method="move" data-option="-10" data-second-option="0" title="Move Left">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.move(-10, 0)">\n                <span class="text-xs bi-arrow-left"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-arrow-right btn btn-light btn-sm" data-method="move" data-option="10" data-second-option="0" title="Move Right">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.move(10, 0)">\n                <span class="text-xs bi-arrow-right"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-arrow-up btn btn-light btn-sm" data-method="move" data-option="0" data-second-option="-10" title="Move Up">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.move(0, -10)">\n                <span class="text-xs bi-arrow-up"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-arrow-down btn btn-light btn-sm" data-method="move" data-option="0" data-second-option="10" title="Move Down">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.move(0, 10)">\n                <span class="text-xs bi-arrow-down"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-flip-vr btn btn-light btn-sm" data-method="scaleX" data-option="-1" title="Flip Horizontal">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.scaleX(-1)">\n                <i class="bi-vr"></i>\n            </span>\n        </button>\n        <button type="button" class="btn-flip-hr btn btn-light btn-sm" data-method="scaleY" data-option="-1" title="Flip Vertical">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.scaleY(-1)">\n                <i class="bi-hr"></i>\n            </span>\n        </button>\n        <button type="button" class="btn-add-crop btn btn-light btn-sm" data-method="crop" title="Crop">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.crop()">\n                <span class="text-xs bi-check-lg"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-remove-crop btn btn-light btn-sm" data-method="clear" title="Clear">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.clear()">\n                <i class="bi-x"></i>\n            </span>\n        </button>\n        <button type="button" class="btn-lock btn btn-light btn-sm" data-method="disable" title="Disable">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.disable()">\n                <span class="text-xs bi-lock"></span>\n            </span>\n        </button>\n        <button type="button" class="btn-unlock btn btn-light btn-sm" data-method="enable" title="Enable">\n            <span class="docs-tooltip" data-toggle="tooltip" title="cropper.enable()">\n                <span class="text-xs bi-unlock"></span>\n            </span>\n        </button>\n    ';$container.html(buttonsHTML),$container.find("#aspect-ratio-select").on("change",(function(){var aspectRatio=eval($(this).val());cropper&&cropper.setAspectRatio(aspectRatio)}))}function generateModalHtml(uniqueId){return`\n        <div class="modal modal fade" id="crop-modal-${uniqueId}" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">\n            <div class="modal-dialog" role="document">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <h5 class="modal-title" id="modalLabel">Crop the image</h5>\n                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                    </div>\n                    <div class="modal-body">\n                        <div class="img-container">\n                            <img id="cropbox-image-${uniqueId}" style="display:block; max-height:300px; max-width:100%">\n                        </div>\n                        <div id="action-buttons-${uniqueId}"></div>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>\n                        <button type="button" class="btn btn-primary btn-sm" id="apply-crop-${uniqueId}">Crop</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        `}$fileInput.on("change",(function(e){var files=e.target.files;if(0!==files.length&&files[0].type.startsWith("image/")){var reader,file,done=function(url){$cropBoxImage.attr("src",url),$cropModal.modal({backdrop:"static",keyboard:!1}),$cropModal.modal("show")};files&&files.length>0&&(file=files[0],URL?done(URL.createObjectURL(file)):FileReader&&((reader=new FileReader).onload=function(e){done(reader.result)},reader.readAsDataURL(file))),$cropButton.data("input",this),$cropButton.data("preview",$inputLabelPreview)}else options.onComplete(files[0],this)})),$cropModal.on("click",(function(e){$(e.target).is($cropModal)&&($cropModal.addClass("shake"),setTimeout((function(){$cropModal.removeClass("shake")}),500))})),$cropModal.on("shown.bs.modal",(function(){var selectedAspectRatio=parseFloat($aspectRatioSelect.val())||options.aspectRatio;cropper=new Cropper($cropBoxImage[0],{aspectRatio:selectedAspectRatio,viewMode:options.viewMode,ready:function(){$actionsContainer&&loadActionButtons($actionsContainer)}})})).on("hidden.bs.modal",(function(){cropper&&(cropper.destroy(),cropper=null)})),$cropButton.on("click",(function(){var canvas;if($cropModal.modal("hide"),cropper){canvas=cropper.getCroppedCanvas(),$(this).data("preview").attr("src",canvas.toDataURL(options.imageType,options.quality));var $fileInput=$(this).data("input");canvas.toBlob((function(blob){var file=new File([blob],`cropped-${uniqId(6)}.jpg`,{type:options.imageType});"function"==typeof options.onComplete&&options.onComplete(file,$fileInput);var dataTransfer=new DataTransfer;dataTransfer.items.add(file),$fileInput.files=dataTransfer.files}),options.imageType,options.quality)}})),$actionsContainer.on("click",(function(event){var target=event.target;if(cropper){for(;target!==this&&!target.getAttribute("data-method");)target=target.parentNode;if(!(target===this||target.disabled||target.className.indexOf("disabled")>-1)){var data={method:target.getAttribute("data-method"),option:target.getAttribute("data-option"),secondOption:target.getAttribute("data-second-option")};data.method&&(cropper[data.method](data.option,data.secondOption),"scaleX"!==data.method&&"scaleY"!==data.method||target.setAttribute("data-option",-data.option))}}}))}function pushStateModal({title:title="Title",fetchUrl:fetchUrl,btnSelector:btnSelector,loadingSpinner:loadingSpinner="loading-spinner",actionButtonName:actionButtonName,modalSize:modalSize="md",modalType:modalType,includeForm:includeForm=!1,formAction:formAction,modalHeight:modalHeight="70vh"}){return new Promise((resolve=>{const calcModalType=modalType??btnSelector.replace(/^[.#]/,"").split("-")[0],modalId=`modal-${calcModalType}`,modalContentClass=`detail-${calcModalType}`,actionBtnId=actionButtonName&&actionButtonName.replace(/\s+/g,"-").toLowerCase()+"-"+calcModalType,modalTemplate=`\n        <div class="modal fade" id="${modalId}" tabindex="-1" aria-hidden="true">\n            <div class="modal-dialog modal-${modalSize} modal-dialog-centered modal-dialog-scrollable">\n                \n                <div class="modal-content">\n                    <div class="modal-header">\n                        <h5 class="modal-title">${title}</h5>\n                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                    </div>\n                    ${includeForm?`<form id="form-${calcModalType}" method="POST" enctype="multipart/form-data">`:""}\n                    <div class="modal-body" style="${includeForm&&"height:"+modalHeight}">\n                        <div class="${loadingSpinner} text-center mt-2">\n                            <div class="spinner-border" role="status">\n                                <span class="visually-hidden">Loading...</span>\n                            </div>\n                        </div>\n                        <div class="${modalContentClass} p-1"></div>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" aria-label="Closse">Cancel</button>\n                        ${actionButtonName?`<button type="submit" id="${actionBtnId}" class="btn btn-primary px-3">${actionButtonName}</button>`:""}    \n                    </div>\n                    ${includeForm?"</form>":""}\n                </div>\n                \n            </div>\n        </div>`;async function openModal(recordId){const url=fetchUrl.replace(":id",recordId);includeForm&&$(`#form-${calcModalType}`).attr("action",formAction.replace(":id",recordId)),$(`#${modalId}`).modal("show"),$(`#${modalId} .${loadingSpinner}`).show(),$(`#${modalId} .${modalContentClass}`).hide();const result=(await fetchRequest(url)).result;result?($(`#${modalId} .modal-title`).text(title),$(`#${modalId} .${modalContentClass}`).html(result)):($(`#${modalId} .modal-title`).text("Error"),$(`#${modalId} .${modalContentClass}`).html('<p class="pb-0 pt-3 p-4">Unable to load content.</p>')),$(`#${modalId} .${loadingSpinner}`).hide(),$(`#${modalId} .${modalContentClass}`).show()}function openModalFromUrl(){const urlParams=new URLSearchParams(window.location.search),recordId=urlParams.get("id"),type=urlParams.get("type");recordId&&type===calcModalType&&openModal(recordId)}$(`#${modalId}`).length||$("body").append(modalTemplate),$(document).on("click",btnSelector,(function(){const recordId=$(this).data("id"),newUrl=`${new URL(window.location).pathname}?id=${recordId}&type=${calcModalType}${window.location.hash}`;history.pushState(null,null,newUrl),openModal(recordId)})),$(window).on("popstate",(function(){openModalFromUrl()})),$(`#${modalId}`).on("hidden.bs.modal",(function(){const currentUrl=new URL(window.location);currentUrl.searchParams.delete("id"),currentUrl.searchParams.delete("type");const newUrl=`${currentUrl.pathname}${currentUrl.search}${window.location.hash}`;history.pushState(null,null,newUrl)})),openModalFromUrl(),modalId.length&&resolve(modalId)}))}!function($){"use strict";setTimeout((function(){$("#spinner").length>0&&$("#spinner").removeClass("show")}),1),$(window).scroll((function(){$(this).scrollTop()>300?$(".back-to-top").fadeIn("slow"):$(".back-to-top").fadeOut("slow")})),$(".back-to-top").click((function(){return $("html, body").animate({scrollTop:0},100,"easeInOutExpo"),!1})),document.addEventListener("DOMContentLoaded",(e=>{var forms=document.querySelectorAll(".needs-validation");Array.prototype.slice.call(forms).forEach((function(form){form.addEventListener("submit",(function(event){form.checkValidity()?setButtonLoading(form.querySelector('button[type="submit"], input[type="submit"]')):(event.preventDefault(),event.stopPropagation()),form.classList.add("was-validated")}),!1)}))}))}(jQuery),document.querySelectorAll(".cw-btn").forEach((button=>{const iconClass=button.getAttribute("data-icon");iconClass&&(button.innerHTML=`<i class="${iconClass}"></i>${button.textContent.trim()}`)})),document.addEventListener("DOMContentLoaded",(function(){let btn=document.querySelector("#view-stories"),contentSeenItems=JSON.parse(localStorage.getItem("zuck-stories-content-seenItems")||"{}"),seenUserIds=Object.keys(contentSeenItems);fetch("/stories",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({seenUserIds:seenUserIds})}).then((response=>response.ok?response.json():null)).then((data=>{if(data)if(data.success&&Array.isArray(data.data?.result)){let storiesData=data.data.result;Array.isArray(data.expiredUsers)&&data.expiredUsers.length>0&&(data.expiredUsers.forEach((userId=>{delete contentSeenItems[userId]})),localStorage.setItem("zuck-stories-content-seenItems",JSON.stringify(contentSeenItems)));let unviewedSeenItems=JSON.parse(localStorage.getItem("zuck-unviewed-stories-seenItems")||"{}");storiesData.sort(((a,b)=>{let aViewed=unviewedSeenItems[a.id]||contentSeenItems[a.id]||!1;return aViewed===(unviewedSeenItems[b.id]||contentSeenItems[b.id]||!1)?0:aViewed?1:-1})),storiesData.some((story=>!contentSeenItems[story.id]))?btn.classList.add("stories-indicator"):btn.classList.remove("stories-indicator")}else btn.classList.remove("stories-indicator");else btn.classList.remove("stories-indicator")})).catch((error=>{console.warn("No stories or server error occurred:",error),btn.classList.remove("stories-indicator")}))})),document.querySelector("#view-stories").addEventListener("click",(function(e){let btn=document.querySelector("#view-stories");btn.classList.contains("stories-indicator")&&btn.classList.remove("stories-indicator");let storiesContent=document.querySelector("#stories-content"),spinner=document.querySelector("#stories-spinner"),errorMessage="<div class='alert alert-warning' role='alert' style='margin-bottom:0px'>There are currently no stories</div>";!function(callback){if(!document.getElementById("zuck-css")){let cssLink=document.createElement("link");cssLink.id="zuck-css",cssLink.rel="stylesheet",cssLink.href="/site/lib/zuck/css/zuck.min.css",document.head.appendChild(cssLink)}if(document.getElementById("zuck-js"))callback();else{let scriptTag=document.createElement("script");scriptTag.id="zuck-js",scriptTag.src="/site/lib/zuck/js/zuck.min.js",scriptTag.onload=callback,document.body.appendChild(scriptTag)}}((function(){storiesContent.classList.remove("d-none"),spinner.classList.add("show");let contentSeenItems=localStorage.getItem("zuck-stories-content-seenItems");contentSeenItems=contentSeenItems?JSON.parse(contentSeenItems):{};let seenUserIds=Object.keys(contentSeenItems);fetch("/stories",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({seenUserIds:seenUserIds})}).then((response=>response.json())).then((data=>{if(spinner.classList.remove("show"),data.success){let storiesData=data.data.result;data.expiredUsers&&data.expiredUsers.length>0&&(data.expiredUsers.forEach((userId=>{delete contentSeenItems[userId]})),localStorage.setItem("zuck-stories-content-seenItems",JSON.stringify(contentSeenItems))),storiesContent.innerHTML="";let unviewedSeenItems=localStorage.getItem("zuck-unviewed-stories-seenItems");contentSeenItems=localStorage.getItem("zuck-stories-content-seenItems"),unviewedSeenItems=unviewedSeenItems?JSON.parse(unviewedSeenItems):{},contentSeenItems=contentSeenItems?JSON.parse(contentSeenItems):{},storiesData.sort(((a,b)=>{let aViewed=unviewedSeenItems[a.id]||contentSeenItems[a.id]||!1,bViewed=unviewedSeenItems[b.id]||contentSeenItems[b.id]||!1;return aViewed&&!bViewed?1:!aViewed&&bViewed?-1:0}));const zuckInstance=new Zuck(storiesContent,{backNative:!0,autoFullScreen:!1,skin:"snapgram",avatars:!0,list:!1,cubeEffect:!0,localStorage:!0,reactive:!1,stories:storiesData,callbacks:{onView:function(storyId,callback){!function(storyId){fetch(`/stories/viewed/${storyId}`,{method:"PATCH",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")}}).then((response=>response.json()))}(storyId),"function"==typeof callback&&callback()},onClose:function(storyId,callback){callback()},onOpen:function(storyId,callback){callback()},onNextItem:function(storyId,currentItem,callback){callback()},onEnd:function(storyId,callback){callback()},onNavigateItem:function(storyId,direction,callback){callback()},onDataUpdate:function(storyId,callback){callback()}}});storiesContent.zuckInstance=zuckInstance}else storiesContent.innerHTML=errorMessage})).catch((error=>{spinner.classList.remove("show"),storiesContent.innerHTML=errorMessage}))}))})),document.querySelector("#storiesCanvas").addEventListener("hidden.bs.offcanvas",(function(){let storiesContent=document.querySelector("#stories-content");storiesContent.innerHTML='\n        <div id="stories-spinner" class="show bg-white d-flex align-items-center justify-content-center">\n            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">\n                <span class="visually-hidden">Loading...</span>\n            </div>\n        </div>\n    ',storiesContent.classList.add("d-none")})),document.addEventListener("DOMContentLoaded",(()=>{const modalContainer=document.getElementById("modal-container");let currentPage=1,isLoading=!1,hasMorePages=!0;const announcementSeen=sessionStorage.getItem("announcement_seen"),notificationsSeen=sessionStorage.getItem("notifications_seen");modalContainer.innerHTML='\n            <div id="news-modal" class="modal fade" tabindex="-1" role="dialog">\n                <div class="modal-dialog modal-dialog-centered" role="document">\n                    <div class="modal-content" style="background: #ffffffdd">\n                        <div class="modal-header" style="background-color: #ff660010 !important">\n                            <h5 class="modal-title"><i class="bi-megaphone"></i> &nbsp; Notifications</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                        </div>\n                        <div class="modal-body">\n                            <div class="d-flex justify-content-between align-items-center mb-1" style="margin-top:-4px">\n                                <div class="flex-grow-1 me-3">\n                                    <div class="input-group">\n                                        <span class="input-group-text">\n                                            <i class="bi bi-search"></i>\n                                        </span>\n                                        <input type="text" id="search-notifications" class="form-control" style="border-radius: 3px; padding: .4rem .8rem" placeholder="Search..." />\n                                    </div>\n                                </div>\n                                <div>\n                                    <select id="filter-notifications" class="form-select" style="border-radius: 3px; padding: .4rem .8rem; min-width: 150px;">\n                                        <option value="">All</option>\n                                        <option value="Tender">Tenders</option>\n                                        <option value="Gallery">Galleries</option>\n                                        <option value="Event">Events</option>\n                                        <option value="News">News</option>\n                                        <option value="Seniority">Seniorities</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div id="modal-body-content" class="custom-scrollbar" style="height: 400px; overflow-y: auto;">\n                                <div id="notification-list"></div>\n                                <div id="loading-indicator" class="d-flex justify-content-center my-3">\n                                    <div class="spinner-border text-primary" role="status">\n                                        <span class="visually-hidden">Loading...</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="modal-footer d-flex justify-content-center w-100" style="padding: 2px !important; background-color: #ff660010 !important">\n                            <div><a href="/notifications/all">All Notifications</a></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll(".custom-scrollbar").forEach((element=>{let timeout;element.addEventListener("mouseenter",(()=>{clearTimeout(timeout),element.style.scrollbarWidth="thin",element.style.scrollbarColor="rgba(0, 0, 0, 0.2) transparent"})),element.addEventListener("mouseleave",(()=>{timeout=setTimeout((()=>{element.style.scrollbarWidth="none",element.style.scrollbarColor="transparent transparent"}),1e3)}));const contentWidth=element.offsetWidth;element.style.width=`${contentWidth}px`}))}));const newsModal=new bootstrap.Modal(document.getElementById("news-modal")),notificationList=document.getElementById("notification-list"),loadingIndicator=document.getElementById("loading-indicator"),modalBodyContent=document.getElementById("modal-body-content"),searchInput=document.getElementById("search-notifications"),filterDropdown=document.getElementById("filter-notifications");function handleSearchOrFilter(){currentPage=1,notificationList.innerHTML="",loadingIndicator.innerHTML='<div class="spinner-border text-primary" role="status">\n                                            <span class="visually-hidden">Loading...</span>\n                                        </div>',hasMorePages=!0,fetchNotifications(currentPage)}function fetchNotifications(page){if(isLoading||!hasMorePages)return;isLoading=!0;const searchQuery=searchInput.value.trim(),selectedType=filterDropdown.value;showLoadingIndicator(!0),fetch(`/notifications?page=${page}&search=${encodeURIComponent(searchQuery)}&type=${selectedType}`).then((response=>response.json())).then((data=>{const{notifications:notifications,nextPage:nextPage,hasMore:hasMore}=data;notifications.length&&function(notifications){const notificationItems=notifications.map((item=>`\n                <div class="d-flex align-items-center p-2 notification-item ${item.recentNotification&&"recent-notification-indicator"}">\n                    <div class="me-3 notification-img">\n                        <img src="${item.imageUrl}" class="img-fluid rounded}" alt="${item.type}">\n                    </div>\n                    <div class="flex-grow-1">\n                        <a href="${item.url}">${item.title}</a>\n                    </div>\n                    <small class="news-date text-muted d-flex flex-column align-items-end ms-2" style="flex-shrink: 0;">\n                        <div class="mb-1">\n                            <a href="${item.info[2]}" class="badge text-bg-primary" style="font-size: 10px; display: inline-block">${item.info[0]}</a>\n                        </div>\n                        <span class="fw-bold" style="font-size:.7rem">${item.created_at}</span>\n                    </small>\n                </div>\n            `)).join("");notificationList.innerHTML+=notificationItems}(notifications),currentPage=nextPage||currentPage,hasMorePages=hasMore,isLoading=!1,sessionStorage.setItem("notifications_seen",!0),hasMore||(showLoadingIndicator(!1),loadingIndicator.innerHTML='\n                <span class="text-muted">No more notifications</span>\n            ')})).catch((error=>{console.error("Error fetching notifications:",error),isLoading=!1,showLoadingIndicator(!1)}))}function showLoadingIndicator(show){loadingIndicator.style.display=show?"flex":"none"}searchInput.addEventListener("input",handleSearchOrFilter),filterDropdown.addEventListener("change",handleSearchOrFilter),notificationsSeen||(fetchNotifications(currentPage),newsModal.show()),announcementSeen||fetch("/notifications").then((response=>response.json())).then((data=>{const{announcement:announcement}=data;announcement&&(modalContainer.innerHTML+=`\n                            <div id="announcement-modal" class="modal fade" tabindex="-1" role="dialog" style="z-index: 9999;">\n                                <div class="modal-dialog" role="document">\n                                    <div class="modal-content">\n                                        <div class="modal-header">\n                                            <h5 class="modal-title"><i class="bi bi-megaphone fs-3 me-3 text-warning"></i> ${announcement.title}</h5>\n                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                                        </div>\n                                        <div class="modal-body">\n                                            <div class="announcement-item p-1 border border-warning rounded">\n                                                <div>\n                                                    <h6>${announcement.description}</h6>\n                                                    <a href="/pages/Announcement" class="d-block">\n                                                        <img src="${announcement.image}" class="img-fluid rounded mt-1" />\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        `,sessionStorage.setItem("announcement_seen",!0),new bootstrap.Modal(document.getElementById("announcement-modal")).show())})),modalBodyContent.addEventListener("scroll",(()=>{modalBodyContent.scrollTop+modalBodyContent.clientHeight>=modalBodyContent.scrollHeight-50&&fetchNotifications(currentPage)}))})),document.addEventListener("DOMContentLoaded",(()=>{const themeToggle=document.createElement("button");themeToggle.id="theme-toggle",themeToggle.className="position-fixed",themeToggle.style.cssText="right: 0; top: 8rem; z-index: 1040; color: white; border: none; padding: .3rem .5rem; border-radius: 5px; cursor: pointer;background-color: #0b7240";const icon=document.createElement("i");icon.className="bi bi-palette",icon.style.fontSize="1.5rem",themeToggle.appendChild(icon);const offcanvas=document.createElement("div");offcanvas.className="offcanvas offcanvas-end",offcanvas.id="themeCanvas",offcanvas.setAttribute("tabindex","-1"),offcanvas.setAttribute("aria-labelledby","themeCanvasLabel");offcanvas.innerHTML=`\n        <div class="offcanvas-header">\n            <h5 class="offcanvas-title" id="themeCanvasLabel">Choose Theme</h5>\n            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>\n        </div>\n        <div class="offcanvas-body">\n            <div class="d-flex flex-column gap-3">\n                ${[{name:"default",color:"#0b7240",title:"Default Theme"},{name:"brown",color:"#855723",title:"Brown Theme"},{name:"blue",color:"#3b5998",title:"Blue Theme"},{name:"violet",color:"#612bac",title:"Violet Theme"},{name:"darkred",color:"#830051",title:"Dark Red Theme"}].map((theme=>`\n                    <div class="theme-option p-3 rounded" onclick="applyTheme('${theme.name}')" \n                        style="cursor: pointer; border: 1px solid #ddd; box-shadow: 0 0 15px #00000045" onmouseover="this.style.backgroundColor='${theme.color}'; this.style.color = 'white'" onmouseout="this.style.backgroundColor='transparent'; this.style.color = 'black'">\n                        <div class="d-flex align-items-center gap-2">\n                            <div style="width: 25px; height: 25px; background-color: ${theme.color}; border-radius: 50%;border:2px solid #fff;"></div>\n                            <h6 class="mb-0">${theme.title}</h6>\n                        </div>\n                    </div>\n                `)).join("")}\n            </div>\n        </div>\n    `,document.body.appendChild(themeToggle),document.body.appendChild(offcanvas),window.applyTheme=function(themeName){let themeLink=document.getElementById("theme-stylesheet");if("default"===themeName)themeLink&&themeLink.remove();else{if(!themeLink){themeLink=document.createElement("link"),themeLink.id="theme-stylesheet",themeLink.rel="stylesheet";const styleSheet=document.querySelector('link[href*="style.min.css"]');styleSheet?styleSheet.parentNode.insertBefore(themeLink,styleSheet.nextSibling):document.head.appendChild(themeLink)}themeLink.href=`/site/css/themes/${themeName}.css`}localStorage.setItem("selectedTheme",themeName),window.themeCanvas.hide(),applyThemeColorToButton()},window.themeCanvas=new bootstrap.Offcanvas(document.getElementById("themeCanvas")),themeToggle.addEventListener("click",(()=>{window.themeCanvas.show()}))})),document.querySelectorAll(".needs-validation").forEach((form=>{form.addEventListener("submit",(function(event){const button=form.querySelector(".cw-btn");form.checkValidity()?button&&(button.setAttribute("data-loading","true"),button.disabled=!0,setTimeout((()=>form.submit()),10)):(event.preventDefault(),event.stopPropagation()),form.classList.add("was-validated")})),form.querySelectorAll(".cw-btn").forEach((button=>{button.addEventListener("click",(function(e){form.checkValidity()||(e.preventDefault(),e.stopPropagation(),form.classList.add("was-validated"))}))}))}));