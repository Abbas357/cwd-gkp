"use strict";
!(function () {
  var e,
    t,
    n,
    a = a || {},
    o =
      ((a.Plate = a.Plate || {}),
      {
        plate: document.getElementById("integrated-plate"),
        isIE:
          0 < window.navigator.userAgent.indexOf("MSIE ") ||
          !!window.navigator.userAgent.match(/Trident.*rv\:11\./),
      }),
    r =
      ((o.item = o.plate.getAttribute("item")),
      (o.itemService = o.plate.getAttribute("item-svc")),
      {
        getParentWithClass: function e(t, n) {
          return t.className &&
            "string" == typeof t.className &&
            0 <= t.className.split(" ").indexOf(n)
            ? t
            : t.parentNode && e(t.parentNode, n);
        },
        getParentWithSelector: function e(t, n) {
          return (
            t.parentNode.querySelector(n) ||
            (t.parentNode && e(t.parentNode, n))
          );
        },
        getParentByTagName: function (e, t) {
          for (t = t.toLowerCase(); e && e.parentNode; )
            if ((e = e.parentNode).tagName && e.tagName.toLowerCase() == t)
              return e;
          return null;
        },
        navigate: function (t, n, a) {
          var o = [].indexOf.call(t, n),
            r = 0;
          switch (a) {
            case e.previous:
              r = 0 === o ? t.length - 1 : o - 1;
              break;
            case e.next:
              r = o === t.length - 1 ? 0 : o + 1;
              break;
            case e.home:
              r = 0;
              break;
            case e.end:
              r = t.length - 1;
          }
          t[r].focus();
        },
        checkVisibilty: function (e) {
          return function (t) {
            return t.offsetParent && t.offsetParent.classList.contains(e);
          };
        },
        DIRECTIONS: (e = { previous: 0, next: 1, home: 2, end: 3 }),
        isMobileToggleMenuVisible: function () {
          var e = document.querySelector(".cw-mobile-nav-toggle");
          return (e = e && window.getComputedStyle(e)) && "none" !== e.display;
        },
        getDocumentHeight: function () {
          return document.documentElement.scrollHeight;
        },
        isDesktopDevice: function () {
          return !window.matchMedia("(pointer: coarse)").matches;
        },
        isMobileDevice: function () {
          return window.matchMedia("(max-width: 767.99px)").matches;
        },
        getWindowWidth: function () {
          return (
            window.innerWidth ||
            document.documentElement.clientWidth ||
            document.body.clientWidth ||
            document.body.offsetWidth
          );
        },
        getNodeItemByclass: function (e, t) {
          if (t)
            return (e = [].filter.call(e, function (e) {
              return e.classList.contains(t);
            })).length
              ? e[0]
              : null;
        },
      });
  ((a = a || {}).Plate = a.Plate || {}),
    (a.Plate.KeyNavigation = (function () {
      var e = document.getElementById("integrated-plate"),
        t = e.querySelector(".cw-bottom > .popoverOverlay"),
        n = o.premierIsGlobalPortal;
      function a(e) {
        var a = e.target.parentNode;
        a.classList.contains("child-nav") &&
          (e.preventDefault(),
          e.target.setAttribute("aria-expanded", !0),
          (a = a
            .querySelector(".sub-nav")
            .querySelector(".cw-menuItem:not(.cw-back-button)")) && a.focus(),
          e.target.classList.contains("cw-top-nav-button")) &&
          e.target.parentElement.classList.contains("child-nav") &&
          ((a = r.getDocumentHeight() - 104),
          (t.style.height = a + "px"),
          n
            ? t.classList.add("cw-show", "globalLMenuTop")
            : t.classList.add("cw-show"));
      }
      function i(e) {
        var a;
        r.isMobileToggleMenuVisible()
          ? window.dispatchEvent(
              new CustomEvent("rightpopoverclicked.um", {
                bubbles: !1,
                detail: null,
              })
            )
          : (a = e.target.classList.contains("cw-top-nav-button")
              ? e.target
              : r.getParentWithSelector(
                  e.target.parentNode,
                  '.child-nav>button[aria-expanded="true"]'
                )) &&
            (a.setAttribute("aria-expanded", !1),
            a.focus(),
            (a = r.getParentByTagName(e.target.parentElement, "LI"))) &&
            a.classList &&
            a.classList.contains("cw-top-menu") &&
            (n
              ? t.classList.remove("cw-show", "globalLMenuTop")
              : t.classList.remove("cw-show"));
      }
      function s(e, t, n, a) {
        (t = t.querySelectorAll(
          'a:not([tabindex="-1"]),button:not([tabindex="-1"])'
        )),
          (t = [].filter.call(t, r.checkVisibilty(a))),
          n === r.DIRECTIONS.previous
            ? r.navigate(t, e.target, r.DIRECTIONS.previous)
            : r.navigate(t, e.target, r.DIRECTIONS.next),
          e.preventDefault();
      }
      return {
        keydownHandler: function (e) {
          switch (e.key) {
            case "Enter":
            case " ":
            case "Spacebar":
              a(e);
              break;
            case "Escape":
            case "Esc":
              i(e);
              break;
            case "Up":
            case "ArrowUp":
              (t = r.getParentWithClass(e.target.parentNode, "sub-nav")) &&
                t.contains(e.target) &&
                s(e, t, r.DIRECTIONS.previous, "sub-nav");
              break;
            case "Down":
            case "ArrowDown":
              (t = r.getParentWithClass(e.target.parentNode, "sub-nav")) &&
              t.contains(e.target)
                ? s(e, t, r.DIRECTIONS.next, "sub-nav")
                : a(e);
              break;
            case "Left":
            case "ArrowLeft":
              e.target.classList.contains("cw-top-nav-button")
                ? s(
                    e,
                    (t = r.getParentWithClass(
                      e.target.parentNode,
                      "cw-top-menu-nav"
                    )),
                    r.DIRECTIONS.previous,
                    "cw-top-nav"
                  )
                : i(e);
              break;
            case "Right":
            case "ArrowRight":
              var t;
              e.target.classList.contains("cw-top-nav-button")
                ? s(
                    e,
                    (t = r.getParentWithClass(
                      e.target.parentNode,
                      "cw-top-menu-nav"
                    )),
                    r.DIRECTIONS.next,
                    "cw-top-nav"
                  )
                : a(e);
          }
          e.stopPropagation();
        },
        mobileTabKeyDown: function (t) {
          switch (t.key) {
            case "Escape":
            case "Esc":
              i(t), (n = e.querySelector(".cw-mobile-nav-toggle")).focus();
              break;
            case "Tab":
              var n, a, o, s;
              t.target.classList.contains("first-level")
                ? ((o =
                    (a = r.getParentWithClass(t.target, "cw-top-menu-nav")) &&
                    a.lastElementChild),
                  (s =
                    t.target.parentElement &&
                    t.target.parentElement.getAttribute("aria-expanded")),
                  o != t.target.parentElement ||
                    s ||
                    (i(t),
                    (n = e.querySelector(".cw-mobile-nav-toggle")) && n.focus(),
                    t.preventDefault()))
                : t.target.classList.contains("first-level") ||
                  ((o =
                    (a = r.getParentWithClass(t.target, "sub-nav")) &&
                    a.lastElementChild) == t.target.parentElement &&
                    ((s = a.querySelector(
                      ".cw-back-list-item .cw-back-button"
                    )) && s.focus(),
                    t.preventDefault()));
          }
        },
      };
    })()),
    ((a = a || {}).Plate = a.Plate || {}),
    (function (e) {
      var t = e.getElementById("integrated-plate"),
        n = t ? t.querySelector(".cw-mobile-nav-toggle") : null,
        i = t.querySelector("#integrated-plate-navigation"),
        s = i.querySelector("nav > ul.cw-top-menu-nav"),
        l = t.querySelector(".cw-bottom .cw-bottom-wrapper > .popoverOverlay"),
        c = r.isMobileToggleMenuVisible(),
        d = o.premierIsGlobalPortal;
      function u() {
        var t = e.querySelector(".aria-nav");
        if ((window.addEventListener("keydown", w), c)) {
          window.addEventListener("rightpopoverclicked.um", g),
            e.addEventListener("click", g),
            n.addEventListener("click", b),
            n.addEventListener("keydown", p),
            s && s.addEventListener("click", y);
          for (
            var o = e.querySelectorAll("ul.sub-nav"), r = 0;
            r < o.length;
            r++
          )
            o[r].removeAttribute("style");
          t.addEventListener("keydown", a.Plate.KeyNavigation.mobileTabKeyDown),
            window.addEventListener("keydown", m);
        } else {
          for (
            var i = e.querySelectorAll("ul.sub-nav"), l = 0;
            l < i.length;
            l++
          ) {
            var d = i[l];
            d.addEventListener("mouseover", L),
              d.addEventListener("keydown", L),
              d.addEventListener("focusout", S);
          }
          t.addEventListener("keydown", a.Plate.KeyNavigation.keydownHandler);
          for (
            var u = t.querySelectorAll(".cw-top-menu.child-nav"), h = 0;
            h < u.length;
            h++
          )
            u[h].addEventListener("mouseenter", v),
              u[h].addEventListener("mouseleave", E);
        }
      }
      function v(e) {
        E(e), (e = e.currentTarget);
      }
      function m(e) {
        n &&
          n.classList.contains("open") &&
          (("Escape" != e.key && "Esc" != e.key) || g());
      }
      function p(n) {
        switch (n.key) {
          case "Enter":
          case " ":
          case "Spacebar":
            "mobile-expanded" != t.getAttribute("data-state") &&
              (b(n),
              e
                .querySelector(
                  ".cw-top-menu-nav > li:first-child > .cw-top-nav-button"
                )
                .focus());
            break;
          case "Escape":
          case "Esc":
            "mobile-expanded" === t.getAttribute("data-state") && b(n);
        }
      }
      function g(a) {
        n &&
          n.classList.contains("open") &&
          (n.classList.remove("open"),
          t.removeAttribute("data-state"),
          e.body.classList.remove("cw-bodyOverFlow-Hidden"),
          h(),
          f(!1));
      }
      function h() {
        window.setTimeout(function () {
          var e = i.querySelectorAll('.child-nav[aria-expanded="true"]');
          if (0 < e.length)
            for (var t = e.length - 1; 0 <= t; t--) {
              var n = e[t];
              n.setAttribute("aria-expanded", !1), k(n);
            }
        }, 500);
      }
      function b(a) {
        return (
          a.preventDefault(),
          a.stopPropagation(),
          n.classList.toggle("open"),
          t.getAttribute("data-state")
            ? (t.removeAttribute("data-state"), h())
            : (t.setAttribute("data-state", "mobile-expanded"),
              window.dispatchEvent(
                new CustomEvent("mobilemenuopened.um", {
                  bubbles: !1,
                  detail: null,
                })
              )),
          "mobile-expanded" === t.getAttribute("data-state")
            ? (e.body.classList.add("cw-bodyOverFlow-Hidden"), f(!0))
            : (e.body.classList.remove("cw-bodyOverFlow-Hidden"), f(!1)),
          !1
        );
      }
      function f(e) {
        (e = e
          ? n.getAttribute("data-navigation-close-aria-label-text")
          : n.getAttribute("data-navigation-aria-label-text")) &&
          n.setAttribute("aria-label", e);
      }
      function y(e) {
        e.stopPropagation();
        var t = e.target.classList.contains("cw-back-list-item")
          ? e.target
          : r.getParentWithClass(e.target, "cw-back-list-item");
        (t =
          null == t
            ? e.target.classList.contains("child-nav")
              ? e.target
              : r.getParentByTagName(e.target, "li")
            : t) &&
          (0 <= t.className.indexOf("child-nav")
            ? (t.setAttribute("aria-expanded", !0),
              k(t, !0),
              e.preventDefault())
            : 0 <= t.className.indexOf("cw-back-list-item") &&
              (0 <
                (t = i.querySelectorAll('.child-nav[aria-expanded="true"]'))
                  .length &&
                ((t = t[t.length - 1]).setAttribute("aria-expanded", !1), k(t)),
              e.preventDefault()));
      }
      function k(e, t) {
        t && e
          ? ((e.parentElement.scrollTop = 0),
            e.parentElement.classList.add("cw-overFlow-yHidden"))
          : e.parentElement.classList.remove("cw-overFlow-yHidden");
      }
      function L(t) {
        if (!c) {
          t = t.target.getAttribute("data-tier-id");
          for (
            var n = e.querySelectorAll('ul.sub-nav[data-tier-id="' + t + '"]'),
              a = 0;
            a < n.length;
            a++
          )
            n[a].style.height = "auto";
          var o = (function (e) {
            for (var t = 0, n = 0; n < e.length; n++) {
              var a = e[n];
              a.offsetHeight > t && (t = a.offsetHeight);
            }
            return t;
          })(n);
          for (a = 0; a < n.length; a++) n[a].style.height = o + "px";
        }
      }
      function E(e) {
        "mouseenter" === e.type
          ? ((e = r.getDocumentHeight() - 104),
            d
              ? l.classList.add("cw-show", "globalLMenuTop")
              : l.classList.add("cw-show"),
            (l.style.height = e + "px"))
          : d
          ? l.classList.remove("cw-show", "globalLMenuTop")
          : l.classList.remove("cw-show");
      }
      function w(n) {
        var a = e.getElementById("cw-integrated-footer");
        9 !== (window.event ? n.keyCode : n.which) ||
          t.classList.contains("user-is-tabbing") ||
          (t.classList.add("user-is-tabbing"),
          a.classList.add("user-is-tabbing"),
          e.addEventListener("mouseover", C));
      }
      function S(e) {
        if (!e.currentTarget.contains(e.relatedTarget)) {
          var t = e.currentTarget.parentNode.querySelectorAll(
            '.child-nav>button[aria-expanded="true"]'
          );
          if (t && 0 < t.length) {
            for (var n = 0; n < t.length; n++)
              t[n].setAttribute("aria-expanded", !1);
            d
              ? l.classList.remove("cw-show", "globalLMenuTop")
              : l.classList.remove("cw-show");
          }
        }
      }
      function C(n) {
        var a = e.getElementById("cw-integrated-footer");
        "mouseover" == n.type &&
          (t.classList.remove("user-is-tabbing"),
          a.classList.remove("user-is-tabbing"),
          e.removeEventListener("mouseover", C));
      }
      t && u(),
        window.addEventListener("resize", function (t) {
          window.removeEventListener("keydown", w);
          for (
            var o = e.querySelector(".aria-nav"),
              i =
                (o.removeEventListener(
                  "keydown",
                  a.Plate.KeyNavigation.keydownHandler
                ),
                o.removeEventListener(
                  "keydown",
                  a.Plate.KeyNavigation.mobileTabKeyDown
                ),
                window.removeEventListener("rightpopoverclicked.um", g),
                window.removeEventListener("keydown", m),
                e.removeEventListener("click", g),
                n.removeEventListener("click", b),
                n.removeEventListener("keydown", p),
                s.removeEventListener("click", y),
                o.querySelectorAll(".cw-top-menu.child-nav")),
              l = 0;
            l < i.length;
            l++
          )
            i[l].removeEventListener("mouseenter", v),
              i[l].removeEventListener("mouseleave", E);
          var d = e.querySelectorAll("ul.sub-nav");
          for (l = 0; l < d.length; l++) {
            var h = d[l];
            h.removeEventListener("mouseover", L),
              h.removeEventListener("keydown", L),
              h.removeEventListener("focusout", S);
          }
          (c = r.isMobileToggleMenuVisible()) || g(), u();
        });
    })(document),
    (function (e, t) {
      var n,
        a = t.querySelectorAll("#integrated-plate .has-popover"),
        i = t.getElementById("integrated-plate"),
        s = i.querySelector(".cw-bottom .cw-bottom-wrapper > .popoverOverlay"),
        l = o.premierIsGlobalPortal,
        c = !0,
        d = l ? "globalUtilityTop" : "utilityTop";
      function u() {
        var n = L(),
          o = (n && w(n), r.isMobileToggleMenuVisible());
        if (a && 0 < a.length) {
          for (var i = 0; i < a.length; i++)
            o
              ? a[i].addEventListener("click", k)
              : (a[i].addEventListener("click", m),
                a[i].addEventListener("keydown", S),
                r.isDesktopDevice()
                  ? (a[i].addEventListener("mouseenter", h),
                    a[i].addEventListener("mouseleave", h),
                    a[i].addEventListener("focusout", v))
                  : s.addEventListener("click", m));
          if (o) {
            e.addEventListener("mobilemenuopened.um", E),
              t.addEventListener("click", E);
            for (
              var l = t.querySelectorAll(
                  "#integrated-plate .cw-popover-link~.popover .cw-close a"
                ),
                c = 0,
                d = l.length;
              c < d;
              c++
            )
              l[c].addEventListener("click", y);
          }
        }
      }
      function v(e) {
        e.currentTarget.contains(e.relatedTarget) ||
          (w(L()), s.classList.remove("cw-show", "utilityTop"));
      }
      function m(e) {
        var n,
          a = e.target.classList.contains("cw-popover-link")
            ? e.target
            : r.getParentWithClass(e.target, "cw-popover-link"),
          o = a && a.getAttribute("aria-expanded");
        if (
          ("true" === o || e.target.classList.contains("popoverOverlay")) &&
          (a = a || L())
        )
          return E(a), s.classList.remove("cw-show", d), !1;
        a &&
          (E(a),
          a.parentElement.querySelector(".popover")
            ? (a.setAttribute("aria-expanded", !0),
              (o = r.getDocumentHeight() - 58),
              s.classList.add("cw-show", d),
              (s.style.height = o + "px"),
              p(e),
              (o = r.getParentWithClass(e.target, "item-selector")),
              a.classList.contains("cart") ||
                o ||
                n ||
                ((o =
                  t.querySelectorAll(
                    '.cw-popover-link[aria-expanded="true"]~.popover a:not([tabindex="-1"])'
                  ) ||
                  t.querySelectorAll(
                    '.popover-link[aria-expanded="true"] .popover a:not([tabindex="-1"])'
                  )) &&
                  0 < o.length &&
                  (n = [].filter.call(o, r.checkVisibilty("popover"))[0]) &&
                  n.focus()),
              e.preventDefault())
            : a.click());
      }
      function p(t) {
        var n = t.currentTarget.querySelector(".cw-popover-link");
        e.dispatchEvent(
          new CustomEvent("areaexpanded.um", {
            bubbles: !1,
            detail: { currentpopoverLink: n, eventType: t.type },
          })
        );
      }
      function g(t, n) {
        (n = n || t.currentTarget.querySelector(".cw-popover-link")),
          e.dispatchEvent(
            new CustomEvent("areacollapsed.um", {
              bubbles: !1,
              detail: { currentpopoverLink: n, eventType: t.type },
            })
          );
      }
      function h(e) {
        var t = e.currentTarget.querySelector(".cw-popover-link"),
          n = t && t.parentElement.querySelector(".popover:not(.cw-hide)"),
          a = t && !o.isIE && t.querySelector(".cw-utility-dwell-path");
        !n ||
          ("mouseenter" === e.type &&
            "true" === t.getAttribute("aria-expanded")) ||
          ((n = "mouseenter" === e.type),
          t.setAttribute("aria-expanded", n),
          n
            ? (p(e),
              (t = r.getDocumentHeight() - 58),
              (s.style.height = t + "px"),
              s.classList.add("cw-show", d),
              a &&
                (n = a) &&
                (n.classList.remove("cw-hide"),
                n.classList.add("cw-show"),
                n.addEventListener("mouseenter", b),
                n.addEventListener("mouseleave", f)))
            : (g(e),
              c && s.classList.remove("cw-show", d),
              (c = !0),
              a &&
                ((t = a) && t.classList.add("cw-hide"), t) &&
                t.classList.remove("cw-show")));
      }
      function b(e) {
        n = setTimeout(function () {
          var e = L();
          (c = !1),
            (e = e && e.parentElement) &&
              e.dispatchEvent(new MouseEvent("mouseleave", { bubbles: !0 }));
        }, 800);
      }
      function f(e) {
        n && clearTimeout(n);
      }
      function y(e) {
        return (
          e.stopPropagation(),
          e.preventDefault(),
          w(r.getParentWithSelector(this, ".cw-popover-link")),
          i.classList.remove("cw-ele-fixed-pos"),
          !1
        );
      }
      function k(n) {
        var a = r.getParentWithClass(n.target, "cw-popover-link");
        if (a)
          return (
            n.stopPropagation(),
            n.preventDefault(),
            E(n, a),
            (a = n),
            (n = r.getParentWithClass(a.target, "cw-popover-link")) &&
              (n.classList.contains("show")
                ? (n.classList.remove("show"),
                  n.setAttribute("aria-expanded", !1),
                  i.classList.remove("cw-ele-fixed-pos"),
                  g(a),
                  t.body.classList.remove("cw-bodyOverFlow-Hidden"))
                : (e.dispatchEvent(
                    new CustomEvent("rightpopoverclicked.um", {
                      bubbles: !1,
                      detail: null,
                    })
                  ),
                  n.classList.add("show"),
                  n.setAttribute("aria-expanded", !0),
                  i.classList.add("cw-ele-fixed-pos"),
                  p(a),
                  r.getParentWithClass(n, "cw-top") &&
                    t.body.classList.add("cw-bodyOverFlow-Hidden"))),
            !1
          );
      }
      function L() {
        return t.querySelector(
          '#integrated-plate .cw-popover-link[aria-expanded="true"]'
        );
      }
      function E(e, t) {
        var n,
          a = L();
        a &&
          ((n = a.parentElement),
          (t && t === a) ||
            ("mobilemenuopened.um" !== e.type &&
              e.target.classList &&
              !e.target.classList.contains("popoverOverlay") &&
              n &&
              n.contains(e.target)) ||
            (w(a), g(e, a)));
      }
      function w(e) {
        e &&
          (e.classList.remove("show"),
          e.setAttribute("aria-expanded", !1),
          t.body.classList.remove("cw-bodyOverFlow-Hidden"),
          i.classList.remove("cw-ele-fixed-pos"));
      }
      function S(e) {
        var t = e.currentTarget.querySelector(
          '.cw-popover-link:not([role="link"])'
        );
        if (t)
          switch (e.key) {
            case "Enter":
            case " ":
            case "Spacebar":
            case "ArrowDown":
              m(e);
              break;
            case "Escape":
            case "Esc":
              r.getParentWithClass(e.currentTarget, "item-selector") ||
                (t.setAttribute("aria-expanded", !1),
                t.classList.remove("show"),
                t.focus(),
                g(e),
                s.classList.remove("cw-show", d));
          }
      }
      u(),
        e.addEventListener("resize", function (n) {
          (function () {
            if (a && 0 < a.length) {
              for (var n = 0; n < a.length; n++)
                a[n].removeEventListener("click", k),
                  a[n].removeEventListener("mouseenter", h),
                  a[n].removeEventListener("mouseleave", h),
                  a[n].removeEventListener("click", m),
                  a[n].removeEventListener("keydown", S),
                  a[n].removeEventListener("mouseenter", h),
                  a[n].removeEventListener("mouseleave", h),
                  a[n].removeEventListener("focusout", v);
              e.removeEventListener("mobilemenuopened.um", E),
                t.removeEventListener("click", E);
              for (
                var o = t.querySelectorAll(
                    "#integrated-plate .cw-popover-link~.popover .cw-close a"
                  ),
                  r = 0,
                  i = o.length;
                r < i;
                r++
              )
                o[r].removeEventListener("click", y);
            }
          })(),
            u();
        });
    })(window, document),
    ((a = a || {}).Plate = a.Plate || {}),
    (a.Plate.itemService = a.Plate.itemService || {}),
    window,
    (n = document),
    function () {
      var e, t, a;
      n.querySelector(".cw-bottom .cw-bottom-wrapper > .popoverOverlay"),
        (this.init = function (n) {
          (a = {
            winWidth: r.getWindowWidth(),
            isMobile: r.isMobileDevice(),
            isTabDekstop: 768 <= r.getWindowWidth(),
            jsSpinnerSelectorGss: ".js-cw-gss",
            formFactorQueryString: null,
            fomrFactorQueryStringValue: null,
            componantQueryString: null,
            elementsToLoadData: null,
            onResize: function () {},
          }),
            "header" === n.componantName
              ? (M((e = Object.assign({}, a, n)), V), N(e))
              : (M((t = Object.assign({}, a, n)), q), N(t));
        });
    }.call(a.Plate.itemService),
    ((a = a || {}).Plate = a.Plate || {}),
    (a.Plate.FooterStackService = a.Plate.FooterStackService || {}),
    (t = window),
    document,
    function () {
      var e;
      function n(e, t) {
        o("keydown" === e.type ? t : e.currentTarget);
      }
      function a(e) {
        var t, n;
        e &&
          ((n = e) && n.classList.toggle("active"),
          (e = (n = e).classList.contains("item-selector")
            ? ".cw-popover-link"
            : "button"),
          (n = n.querySelector(e))) &&
          ((e = "aria-expanded"),
          (t = !("true" === (n = n).getAttribute("aria-expanded"))),
          n.setAttribute(e, t));
      }
      function o(t) {
        var n = r.getNodeItemByclass(e.stackCollections, "active");
        "implicitClose" === t
          ? a(n)
          : (t.classList.contains("cw-stackHeading")
              ? (n =
                  n ||
                  e.footerComponant.querySelector(
                    ".mobile-item-accordion .item-selector.active"
                  ))
              : t.classList.contains("item-list") &&
                !n &&
                (n = r.getNodeItemByclass(e.itemStackCollections, "active")),
            a(n),
            t.isEqualNode(n) || a(t));
      }
      function i(e) {
        var t,
          a = e.key,
          o = e.target.parentElement;
        switch (a) {
          case "Enter":
            o.classList.contains("cw-stackHeading") &&
              (e.preventDefault(),
              n(e, o),
              (t =
                o.nextElementSibling &&
                o.nextElementSibling.querySelector("li a"))) &&
              t.focus();
            break;
          case "ArrowUp":
            "li" === o.tagName.toLowerCase() &&
              (t =
                o.previousElementSibling &&
                o.previousElementSibling.querySelector("a")) &&
              t.focus();
            break;
          case "ArrowDown":
            "li" === o.tagName.toLowerCase() &&
              (t =
                o.nextElementSibling &&
                o.nextElementSibling.querySelector("a")) &&
              t.focus();
            break;
          case "Escape":
            "li" === o.tagName.toLowerCase() &&
              ((t =
                (t = r.getParentWithClass(o, "stack")) &&
                t.querySelector(".cw-stackHeading")) && n(e, t),
              t) &&
              t.querySelector("button").focus();
        }
      }
      t.addEventListener("load", function () {
        t.addEventListener("resize", function (t) {
          e.OnResize();
        });
      }),
        (this.stackEventHandlerService = function (t) {
          if (
            (e = {
              footerComponant: t.footerComponant,
              itemStackCollections: t.itemStackCollections,
              stackCollections: t.stackCollections,
              stackType: t.stackType,
              OnResize: t.OnResize || function () {},
              removeEvents: t.removeEvents,
            }).removeEvents
          ) {
            var a,
              s = e;
            if (s.stackCollections && 0 < s.stackCollections.length)
              for (var l = 0; l < s.stackCollections.length; l++)
                s.stackCollections[l].removeEventListener("click", n),
                  (a = r.getParentWithClass(s.stackCollections[l], "stack")) &&
                    a.removeEventListener("keydown", i);
            if (s.itemStackCollections && 0 < s.itemStackCollections.length)
              for (l = 0; l < s.itemStackCollections.length; l++)
                s.itemStackCollections[l].removeEventListener("click", n),
                  (a = r.getParentWithClass(
                    s.itemStackCollections[l],
                    "stack"
                  )) && a.removeEventListener("keydown", i);
          } else {
            var c,
              d = e;
            if (
              ((e.totalAccordionStacks = e.totalAccordionStacks || []),
              "footeritemSelectorClicked" === e.stackType)
            )
              o("implicitClose");
            else {
              switch (e.stackType) {
                case "contextualStack":
                  c = d.stackCollections;
                  break;
                case "itemSelectorStack":
                  c = d.itemStackCollections;
              }
              for (var u = 0; u < c?.length; u++) {
                c[u].addEventListener("click", n);
                var v = r.getParentWithClass(c[u], "stack");
                v && v.addEventListener("keydown", i);
              }
            }
          }
        });
    }.call(a.Plate.FooterStackService),
    (function (e, t) {
      var n,
        o,
        i,
        s = {};
      function l() {
        var e;
        r.isMobileDevice() &&
          (e = n && n.querySelectorAll("ul.item-list-container .item-list")) &&
          ((s.stackType = "itemSelectorStack"),
          (s.itemStackCollections = e),
          a.Plate.FooterStackService.stackEventHandlerService(s));
      }
      function c() {
        return r.isMobileDevice() ? "mobile" : "desktop";
      }
      e.addEventListener("load", function () {
        o = c();
        var e =
          (n = t.getElementById("cw-integrated-footer")) &&
          n.querySelectorAll(".stack >.cw-stackHeading");
        (s.footerComponant = n),
          (s.stackCollections = e),
          (s.stackType = "contextualStack"),
          (s.OnResize = function () {
            (i = c()) !== o &&
              ((s.stackType = "contextualStack"),
              (s.removeEvents = "mobile" !== i),
              a.Plate.FooterStackService.stackEventHandlerService(s),
              l(),
              (o = i));
          }),
          (s.removeEvents = "mobile" !== o),
          a.Plate.FooterStackService.stackEventHandlerService(s);
      }),
        e.addEventListener("itemSelectorReady.um", function () {
          l();
        }),
        e.addEventListener("footeritemSelectorClicked.um", function (e) {
          r.isMobileDevice() &&
            ((s.stackType = "footeritemSelectorClicked"),
            a.Plate.FooterStackService.stackEventHandlerService(s));
        });
    })(window, document);
})();
